// 물 셰이더는 3개의 텍스처가 필요하다 굴절 텍스처, 반사 텍스처, 노말 텍스처
Texture2D reflectionTexture; 
Texture2D refractionTexture; 
Texture2D normalTexture;
SamplerState SampleType;

// WaterBuffer는 매 프레임마다 텍스처 샘플링 위치를 바꾸어 물이 흐르는 것처럼 보이게 하는데 사용된다.
// 또 노말맵에 사용되는 물결의 크기를 조절하는 데 사용된다. 어떤 노말맵은 값이 급격히 바뀌기도 하고 그렇지 않기도 한다. 이런 정도를 조절할 수 있는 변수를 두는 것이 유용하다.
cbuffer WaterBuffer{
    float waterTranslation;
    float reflectRefractScale;
    float2 padding;
}
struct PS_INPUT{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
    float4 reflectionPosition : TEXCOORD1;
    float4 refractionPosition : TEXCOORD2;
};

float4 ps_main(PS_INPUT input) : SV_TARGET{
    float2 reflectTexCoord; 
    float2 refractTexCoord;
    float4 normalMap; 
    float3 normal;
    float4 reflectionColor;
    float4 refractionColor; 
    float4 color;

    // 매 프레임마다 바뀌는 값을 가지고 샘플링 시킬 텍스처의 위치를 수정해준다.
	input.tex.y += waterTranslation;

    // 반사, 굴절 텍스처에 매핑하기 위해서 굴절과 반사의 위치 (x,y)를 uv좌표로 바꿔준다.
    reflectTexCoord.x = input.reflectionPosition.x / input.reflectionPosition.w / 2.0f + 0.5f;
    reflectTexCoord.y = -input.reflectionPosition.y / input.reflectionPosition.w / 2.0f + 0.5f;

    refractTexCoord.x = input.refractionPosition.x / input.refractionPosition.w / 2.0f + 0.5f;
    refractTexCoord.y = -input.refractionPosition.y / input.refractionPosition.w / 2.0f + 0.5f;

    // 노말맵을 샘플링한다.
	normalMap = normalTexture.Sample(SampleType, input.tex);

    // 샘플링한 노말값을 xy좌표 범위로 바꿔준다.
	normal = (normalMap.xyz * 2.0f) - 1.0f;

    // 반사, 굴절 uv좌표를 노말값에 따라 흩뜨린다. 실제 물결이 빛을 왜곡하는 것과 같이 노말 값이 -1에서 +1사이로 변형시켜 물결치는 효과를 만들 수 있다.
    // 노말값에 reflectRefractSacle 을 곱하면 더 자연스럽고 잔잔하게 보이게 한다.
	reflectTexCoord = reflectTexCoord + (normal.xy * reflectRefractScale);
	refractTexCoord = refractTexCoord + (normal.xy * reflectRefractScale);

    // 반사, 굴절 텍스처를 샘플링한다.
    reflectionColor = reflectionTexture.Sample(SampleType, reflectTexCoord);
    refractionColor = refractionTexture.Sample(SampleType, refractTexCoord);

    // 선형보간으로 두 픽셀값을 혼합한다.
    color = lerp(reflectionColor, refractionColor, 0.6f);

	return color;
}
